# vim: set ft=tmux:

# tmux sensible see: https://github.com/tmux-plugins/tmux-sensible?tab=readme-ov-file#options
# Address vim mode switching delay (http://superuser.com/a/252717/65504)
set -s escape-time 0

# Increase scrollback buffer size from 2000 to 50000 lines
set -g history-limit 50000

# Increase tmux messages display duration from 750ms to 4s
set -g display-time 4000

# Refresh 'status-left' and 'status-right' more often, from every 15s to 5s
set -g status-interval 5

# Upgrade $TERM
set -g default-terminal "tmux-256color"

# Emacs key bindings in tmux command prompt (prefix + :) are better than
# vi keys, even for vim users
set -g status-keys emacs

# Focus events enabled for terminals that support them
set -g focus-events on

# Super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on

# Config

# Set shell to fish (detect correct path for ARM64 vs Intel Macs)
if-shell "test -f /opt/homebrew/bin/fish" "set-option -g default-shell /opt/homebrew/bin/fish" "set-option -g default-shell /usr/local/bin/fish" 

# Unbind <C-b> as the prefix key
unbind C-b

# Bind <C-;> as the prefix key
unbind C-\;
set -g prefix C-\;
bind \; send-prefix

# Enable mouse support
set -g mouse on

# Pane resizing with vim-like keys (-r allows repeat without prefix)
# Use - and = for vertical, [ and ] for horizontal resizing
bind -r - resize-pane -D 2
bind -r = resize-pane -U 2
bind -r ] resize-pane -R 2
bind -r [ resize-pane -L 2

# Bind delete key to equalize all panes using tiled layout
bind -r DC select-layout tiled

# Window and pane creation with current path preservation
unbind %
unbind '"'
bind \\ split-window -h -c "#{pane_current_path}"  # Backslash for horizontal split
bind Enter split-window -v -c "#{pane_current_path}"        # Enter for vertical split
bind c new-window -c "#{pane_current_path}"                 # New window in current path

# Bind x to kill current pane
bind x kill-pane

# Bind m to maximize the current pane
unbind z
unbind m
bind m resize-pane -Z

# Bind r to reload tmux config
unbind k
bind r source-file ~/.config/tmux/tmux.conf \; display "Config reloaded ðŸš€"

# Enable vim keys for copy mode
set-window-option -g mode-keys vi

# Copy mode with vim-like keybindings
bind v copy-mode  # Enter copy mode with prefix+v

# Copy mode navigation and selection (vim-style)
bind -T copy-mode-vi q send-keys -X cancel                    # q to exit copy mode
bind -T copy-mode-vi v send-keys -X begin-selection           # v to start selection
bind -T copy-mode-vi V send-keys -X select-line               # V to select entire line
bind -T copy-mode-vi Escape send-keys -X clear-selection      # Escape to clear selection
bind -T copy-mode-vi 'C-v' send-keys -X rectangle-toggle      # Ctrl+v for block selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"  # y to copy and exit
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"  # Mouse copy

# Status bar positioning
set-option -g status-position top 

# Start window and pane numbering at 1 (more intuitive than 0)
set -g base-index 1
set -g pane-base-index 1
set-window-option -g pane-base-index 1
set-option -g renumber-windows on  # Automatically renumber windows when one is closed

# Enable pane navigation while in copy mode (works with vim-tmux-navigator)
bind -T copy-mode-vi 'C-h' select-pane -L      # Left pane
bind -T copy-mode-vi 'C-j' select-pane -D      # Down pane
bind -T copy-mode-vi 'C-k' select-pane -U      # Up pane
bind -T copy-mode-vi 'C-l' select-pane -R      # Right pane
bind -T copy-mode-vi 'C-\' select-pane -l     # Last pane
bind -T copy-mode-vi 'C-Space' select-pane -t:.+  # Next pane


# Plugin Management
set -g @plugin 'tmux-plugins/tpm'  # Tmux Plugin Manager

# Seamless navigation between vim and tmux panes
set -g @plugin 'christoomey/vim-tmux-navigator'

# Session persistence - save and restore tmux sessions
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @resurrect-strategy-vim 'session'      # Restore vim sessions
set -g @resurrect-strategy-nvim 'session'     # Restore neovim sessions
set -g @resurrect-capture-pane-contents 'on'  # Save pane contents

# Automatic session save/restore
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-restore 'on'         # Auto-restore last saved session
set -g @continuum-boot 'on'            # Auto-start tmux on boot
set -g @continuum-save-interval '10'   # Save every 10 minutes

# Theme Configuration
# Using custom fork of catppuccin theme
set -g @plugin 'dmmulroy/catppuccin-tmux'
set -g @catppuccin_flavour 'macchiato'  # Dark theme variant

set -g @catppuccin_window_status_enable "yes"
set -g @catppuccin_window_status_icon_enable "yes"

set -g @catppuccin_icon_window_zoom "ï”ž "
set -g @catppuccin_icon_window_last "null"
set -g @catppuccin_icon_window_current "null"
set -g @catppuccin_icon_window_mark "null"
set -g @catppuccin_icon_window_silent "null"
set -g @catppuccin_icon_window_activity "null"
set -g @catppuccin_icon_window_bell "null"

set -g @catppuccin_window_middle_separator "null"

set -g @catppuccin_window_default_background "#cad3f5"
set -g @catppuccin_window_default_color "#24273a"
set -g @catppuccin_window_default_fill "all"
set -g @catppuccin_window_default_text "#W"

set -g @catppuccin_window_current_background "#363a4f"
set -g @catppuccin_window_current_color "#c6a0f6"
set -g @catppuccin_window_current_fill "number"
set -g @catppuccin_window_current_text "#W"

set -g @catppuccin_status_modules_right "directory session"
set -g @catppuccin_maximized_text "null"
set -g @catppuccin_status_left_separator "â–ˆ"
set -g @catppuccin_status_right_separator "â–ˆ"
set -g @catppuccin_directory_color "#8aadf4"

# Optional: Custom pane border color (commented out - using theme default)
# set -g pane-active-border-style fg="#c6a0f6"

# Set custom plugin directory
set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/.config/tmux/plugins'

# Auto-install TPM if not present
if "test ! -d ~/.config/tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.config/tmux/plugins/tpm && ~/.config/tmux/plugins/tpm/bin/install_plugins'"

# Initialize TPM (must be last line)
run '~/.config/tmux/plugins/tpm/tpm'